service: nosolopau-siestacms
provider:
  name: aws
  runtime: nodejs12.x
  region: ${env:AWS_REGION}
  stage: ${opt:stage, env:ENV, 'dev'}
  environment:
    USE_S3: true
    POSTS_S3_BUCKET: ${self:custom.posts-bucket}
    POSTS_FOLDER: './posts/'
  iamRoleStatements:
    - Effect: "Allow"
      Action: 
       - 's3:GetObject'
       - 's3:ListBucket'
      Resource: 
        - arn:aws:s3:::${self:custom.posts-bucket}
        - arn:aws:s3:::${self:custom.posts-bucket}/*
plugins:
  - serverless-offline
  - serverless-domain-manager
functions:
  app:
    handler: src/index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
custom:
  posts-bucket: siestacms-posts-${self:provider.stage}
  serverless-offline:
    noPrependStageInUrl: true
  customDomain:
    domainName: ${self:provider.stage}.siestacms.com
    certificateName: '*.siestacms.com'
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: 'regional'
    autoDomain: false
resources:
  Resources:
    PostsBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:custom.posts-bucket}
